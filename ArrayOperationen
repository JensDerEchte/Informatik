public class ArrayOperationen {
    /* 
     *       ---------------
     *       | 0 |  1 |  2 |
     *       ├───┼----------
     *       | 7 | 14 | 21 |
     *       ---------------
     *       https://en.wikipedia.org/wiki/Box-drawing_character
     */
    public void druckeArray(int[] a) {
        if (a.length > 0) {
            for (int i = 0; i < a.length - 1; i = i + 1) {
                System.out.print(  a[i] + ", "  );
            }
            System.out.println(a[a.length - 1]);
        }

        System.out.println( "-------------------------" );
    }

    public void druckeZahl(int zahl) {
        if (zahl < 10) {
            // 2 Leerzeichen: zahl ist kleiner als 10
            System.out.print("  " + zahl);
        } else if (zahl < 100) {
            // 1 Leerzeichen
            System.out.print(" " + zahl);
        } else {
            System.out.print(zahl);
        }
    }

    public void druckeArrayTab(int[] a) {
        // 1. Drucke die Indizes mit | getrennt
        for (int i = 0; i < a.length; i = i + 1) {
            System.out.print(  " | " );
            druckeZahl(i);
        }
        System.out.println( " |" );

        // 2. Horizontale Linie |---|---|---|
        for (int i = 0; i < a.length; i = i + 1) {
            System.out.print(  "-|----");
        }
        System.out.println( "-|" );

        // 3. Drucke die Elemente mit | getrennt
        for (int i = 0; i < a.length; i = i + 1) {
            System.out.print(  " | " );
            druckeZahl(a[i]);
        }
        System.out.println( " |" );

        System.out.println( "\n---\n" );
    }

    public long summe(int[] zahlen) {
        long summe = 0;

        for (int i = 0; i < zahlen.length; i = i + 1) {
            summe = summe + zahlen[i];
        }

        return summe;
    }

    public double mittelwert(int[] zahlen) {
        double s = summe(zahlen);
        return s / zahlen.length;
    }

    public int[] findePlateau(int[] array) {
        // 1. Finde Start des Plateaus
        int start = 0;

        for(; start < array.length - 1; start++) {
            // hat das akt. El. den gleichen Wert
            // wie sein Nachfolger
            if(array[start] == array [start + 1]) {
                // Springe aus der for-Schleife
                break;
            } 
        }
        // Start hat den richtigen Wert

        // 2. Finde die länge des Plateaus
        int ende = start + 1; 
        while(ende < array.length - 1 && array[ende] == array[ende + 1]){
            ende = ende + 1;
        }

        return new int[]{start, ende - start + 1};
    }

    String[] ENGLISH_NUMBERS = {
            "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine",
            "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen",
            "seventeen", "eightteen", "nineteen"
        };

    String[] TENS = {
            null, null, "twenty", "thirdy", "fourty", "fifty", "sixty", "seventy", "eightty",
            "ninety"
        };

    public String toEnglish(int zahl) {
        if(zahl < ENGLISH_NUMBERS.length) {
            return ENGLISH_NUMBERS[zahl];
        } else if(zahl < 100) {
            int letzte = zahl % 10;
            int vorletzte = zahl / 10 % 10;
            if(letzte == 0){
                return TENS[vorletzte];
            }else{
                return TENS[vorletzte] + "-" + ENGLISH_NUMBERS[letzte];
            }
        } else if(zahl < 1000) {
            int vorvorletzte = zahl / 100;
            int vorletzte = zahl % 100 % 10;
            int letzte = zahl % 100 % 10;
            if(letzte == 10){
                return TENS[vorletzte];
            }else{
                return ENGLISH_NUMBERS[vorvorletzte] +" hundred " + TENS[vorletzte + 1] + "-" + ENGLISH_NUMBERS[letzte];
            }
        } else if(zahl < 1_000_000_000) {
            int einer = 0; 
            int zehner = 0; 
            int hunderter = 0;
            int tausender = 0;
            int zehntausender = 0;
            int hundertausender = 0; 
            int millionen = 0;
            int zehnmillionen = 0;
            int hundertmillionen = 0;
            int milliardener = 0;
            if(zahl < 100) {
                int letzte = zahl % 10;
                int vorletzte = zahl / 10 % 10;
                if(letzte == 0){
                    return TENS[vorletzte];
                }else{
                    return TENS[vorletzte] + "-" + ENGLISH_NUMBERS[letzte];
                }
            }else if(zahl < 1_000) {

            }else if(zahl < 10_000) {

            }else if(zahl < 100_000) {

            }else if(zahl < 1_000_000) {

            }else if(zahl < 10_000_000) {

            }else if(zahl < 100_000_000) {

            }else if(zahl < 1_000_000_000) {

            }
        }
        return "Error: Number too large";   
    }  
}
